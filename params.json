{"body":"### About\r\n\r\nWebfilez is a point-and-click, drag-and-drop file manager written in PHP and Javascript.  It provides an easy-to-use interface for people to interact with files on a website.\r\n\r\n### Features\r\n\r\n* Queued uploads with drag-and-drop capabilities\r\n* Loosely-coupled (can replace server-side PHP with Python, C#, etc.)\r\n* Portable PHP code (runs on any 5.3 server)\r\n* Hooks into any PHP application with minimal effort\r\n* Easy-to-change look-and-feel through a single CSS stylesheet\r\n* Fully RESTful server-side interface\r\n\r\n### How it Works\r\n\r\nWebfilez is a self-contained application that can reside anywhere in your webserver, or in your application  directory structure.  It requires PHP5.3, and works on all modern browsers.  It relies on a single API hook to determine what server folder to display to the user.  This can be a single folder for all users, or a separate folder per user account.\r\n\r\n### Installation\r\n\r\n1. Copy the Webfilez/server folder from this repository onto your PHP5.3\r\n2. Copy the config.sample.php to config.local.php, and change the settings\r\n3. In particular, define a directory hook function.  You'll need to specify both the file and the function callback name, which is a standard PHP callback.  If you know that the file will already be loaded \r\n4. Implement the callback in your code (see below).\r\n\r\n### The folder callback function\r\n\r\nTo implement the folder callback, simply create a function that will return a string to the realpath or relative path of a directory on the system.  The directory doesn't have to exist already, but its parent directory must be writable.\r\n\r\nFor example, let's assume there is a folder on the server already named {/userdata}, and you want each user to have a folder under that with their username (e.g. 'bob', 'mary', etc).  The application will create the user's folder if it doesn't already exist.  Your callback function may look something like this:\r\n\r\n```php\r\nfunction getUserFolder() {\r\n\r\n  //Check if logged in.  If not, throw a WebfilezNotAuthorizedException\r\n  if ( ! isset($_SESSION['username']) {\r\n    throw new WebfilezNotAuthorizedException(\"You are not logged in!\");\r\n  }\r\n\r\n  //Get the name of the folder based on the username\r\n  $foldername = $_SESSION['username'];\r\n\r\n  return $foldername;\r\n}\r\n```\r\n\r\nIf you put this function in a file called _myAppGetUser.php_, you would set the Webfilez configuration settings as follows:\r\n\r\n```php\r\n$config['foldercallbackfile'] = '/var/www/path/to/app/myAppGetUser.php';\r\n$config['foldercallback'] = 'getUserFolder'; //this is a standard PHP callback\r\n```\r\n\r\nTest, and you're good to go!","tagline":"A Javascript / PHP HTTP File Manager","google":"","name":"Webfilez","note":"Don't delete this file! It's used internally to help with page regeneration."}